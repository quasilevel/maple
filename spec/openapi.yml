openapi: 3.0.0

info:
  title: Maple
  description: |
    An API to store links to the music, that the user likes, over the cloud.
    Allowing the user to safekeep the music he likes, organize them with tags and search through them

  version: 0.0.1

paths:
  /music:
    get:
      description: ""
      summary: returns a paginated list of all the songs
      parameters:
        - name: size
          in: query
          description: the number of music items to be returned
          schema:
            type: integer
            minimum: 5
            maximum: 10
            default: 5
        - name: start
          in: query
          description: the starting offset
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  _link:
                    type: object
                    properties:
                      next:
                        type: string
                      prev:
                        type: string
                  music:
                    type: array
                    items:
                      $ref: "#/components/schemas/Music"
        "404":
          description: there are no items for the given `size` and `start`
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFound"
                
    post: {} # adds a song to the storage

  /music/{id}:
    get: {} # gets the info about the song for the given id
    put: {} # updates the songs by the id
    delete: {} # deletes a song by the given id

  /music/tags:
    get: {} # gets the list of 

  /music/{tag}:
    get: {} # gets all the songs by the given tag

  /music/search:
    get: {} # searches through the user's music in a feasibly smart way

components:
  schemas:
    Tag:
      type: object
      properties:
        value:
          type: string
    
    MusicMeta:
      type: object
      properties:
        timestamp:
          type: integer
          format: int64
        client:
          type: string

    MusicData:
      type: object
      properties:
        url:
          type: string
        name:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Tag"

    Music:
      type: object
      properties:
        id:
          type: string
        data:
          $ref: "#/components/schemas/MusicData"
        meta:
          $ref: "#/components/schemas/MusicMeta"

    NotFound:
      type: object
      properties:
        message:
          type: string